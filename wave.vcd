$date
	Thu Apr 10 12:53:41 2025
$end
$version
	QuestaSim Version 10.6c
$end
$timescale
	1ns
$end

$scope module uvm_root $end
$upscope $end

$scope module testbench $end
$upscope $end

$scope begin uvm_pkg $end
$var parameter 32 ! UVM_HDL_MAX_WIDTH $end
$var parameter 32 " UVM_STREAMBITS $end
$var parameter 32 # UVM_RADIX $end
$var parameter 32 $ UVM_MACRO_NUMFLAGS $end
$var parameter 32 % UVM_DEFAULT $end
$var parameter 32 & UVM_ALL_ON $end
$var parameter 32 ' UVM_FLAGS_ON $end
$var parameter 32 ( UVM_FLAGS_OFF $end
$var parameter 32 ) UVM_COPY $end
$var parameter 32 * UVM_NOCOPY $end
$var parameter 32 + UVM_COMPARE $end
$var parameter 32 , UVM_NOCOMPARE $end
$var parameter 32 - UVM_PRINT $end
$var parameter 32 . UVM_NOPRINT $end
$var parameter 32 / UVM_RECORD $end
$var parameter 32 0 UVM_NORECORD $end
$var parameter 32 1 UVM_PACK $end
$var parameter 32 2 UVM_NOPACK $end
$var parameter 32 3 UVM_PHYSICAL $end
$var parameter 32 4 UVM_ABSTRACT $end
$var parameter 32 5 UVM_READONLY $end
$var parameter 32 6 UVM_NODEFPRINT $end
$var parameter 32 7 UVM_MACRO_EXTRAS $end
$var parameter 32 8 UVM_FLAGS $end
$var parameter 32 9 UVM_UNPACK $end
$var parameter 32 : UVM_CHECK_FIELDS $end
$var parameter 32 ; UVM_END_DATA_EXTRA $end
$var parameter 32 < UVM_START_FUNCS $end
$var parameter 32 = UVM_SET $end
$var parameter 32 > UVM_SETINT $end
$var parameter 32 ? UVM_SETOBJ $end
$var parameter 32 @ UVM_SETSTR $end
$var parameter 32 A UVM_END_FUNCS $end
$var parameter 32 B UVM_STR_CRC_POLYNOMIAL $end
$var parameter 32 C UVM_STDOUT $end
$var parameter 32 D UVM_LINE_WIDTH $end
$var parameter 32 E UVM_NUM_LINES $end
$var parameter 32 F UVM_SMALL_STRING $end
$var parameter 32 G UVM_LARGE_STRING $end
$var reg 1 H uvm_start_uvm_declarations $end
$var integer 32 I uvm_global_random_seed $end
$var integer 32 J UVM_UNBOUNDED_CONNECTIONS $end

$scope function uvm_hdl_check_path $end
$var integer 32 K uvm_hdl_check_path $end
$upscope $end

$scope function uvm_hdl_deposit $end
$var integer 32 L uvm_hdl_deposit $end
$var reg 1024 M value [1023:0] $end
$upscope $end

$scope function uvm_hdl_force $end
$var integer 32 N uvm_hdl_force $end
$var reg 1024 O value [1023:0] $end
$upscope $end

$scope task uvm_hdl_force_time $end
$var reg 1024 P value [1023:0] $end
$var time 64 Q force_time $end
$upscope $end

$scope function uvm_hdl_release_and_read $end
$var integer 32 R uvm_hdl_release_and_read $end
$var reg 1024 S value [1023:0] $end
$upscope $end

$scope function uvm_hdl_release $end
$var integer 32 T uvm_hdl_release $end
$upscope $end

$scope function uvm_hdl_read $end
$var integer 32 U uvm_hdl_read $end
$var reg 1024 V value [1023:0] $end
$upscope $end

$scope function uvm_dpi_get_next_arg_c $end
$upscope $end

$scope function uvm_dpi_get_tool_name_c $end
$upscope $end

$scope function uvm_dpi_get_tool_version_c $end
$upscope $end

$scope function uvm_dpi_get_next_arg $end
$upscope $end

$scope function uvm_dpi_get_tool_name $end
$upscope $end

$scope function uvm_dpi_get_tool_version $end
$upscope $end

$scope function uvm_dpi_regcomp $end
$upscope $end

$scope function uvm_dpi_regexec $end
$var integer 32 W uvm_dpi_regexec $end
$upscope $end

$scope function uvm_dpi_regfree $end
$upscope $end

$scope function uvm_re_match $end
$var integer 32 X uvm_re_match $end
$upscope $end

$scope function uvm_dump_re_cache $end
$upscope $end

$scope function uvm_glob_to_re $end
$upscope $end

$scope function uvm_revision_string $end
$upscope $end

$scope function uvm_radix_to_string $end
$var integer 32 Y radix $end
$upscope $end

$scope function uvm_instance_scope $end
$var reg 8 Z c [7:0] $end
$var integer 32 [ pos $end
$upscope $end

$scope function uvm_oneway_hash $end
$var integer 32 \ uvm_oneway_hash $end
$var integer 32 ] seed $end
$var reg 1 ^ msb $end
$var reg 8 _ current_byte [7:0] $end
$var reg 32 ` crc1 [31:0] $end
$upscope $end

$scope function uvm_create_random_seed $end
$var integer 32 a uvm_create_random_seed $end
$upscope $end

$scope function uvm_object_value_str $end
$upscope $end

$scope function uvm_leaf_scope $end
$var reg 8 b scope_separator [7:0] $end
$var reg 8 c bracket_match [7:0] $end
$var integer 32 d pos $end
$var integer 32 e bmatches $end
$upscope $end

$scope function uvm_vector_to_string $end
$var reg 4096 f value [4095:0] $end
$var integer 32 g size $end
$var integer 32 h radix $end
$upscope $end

$scope function uvm_get_array_index_int $end
$var integer 32 i uvm_get_array_index_int $end
$var reg 1 j is_wildcard $end
$var integer 32 k i $end
$upscope $end

$scope function uvm_get_array_index_string $end
$var reg 1 l is_wildcard $end
$var integer 32 m i $end
$upscope $end

$scope function uvm_is_array $end
$var reg 1 n uvm_is_array $end
$upscope $end

$scope function uvm_has_wildcard $end
$upscope $end

$scope task run_test $end
$upscope $end

$scope function global_stop_request $end
$upscope $end

$scope function set_global_timeout $end
$var time 64 o timeout $end
$var reg 1 p overridable $end
$upscope $end

$scope function set_global_stop_timeout $end
$var time 64 q timeout $end
$upscope $end

$scope function uvm_report_enabled $end
$var reg 1 r uvm_report_enabled $end
$var integer 32 s verbosity $end
$var reg 2 t severity [1:0] $end
$upscope $end

$scope function uvm_report $end
$var reg 2 u severity [1:0] $end
$var integer 32 v verbosity $end
$var integer 32 w line $end
$upscope $end

$scope function uvm_report_info $end
$var integer 32 x verbosity $end
$var integer 32 y line $end
$upscope $end

$scope function uvm_report_warning $end
$var integer 32 z verbosity $end
$var integer 32 { line $end
$upscope $end

$scope function uvm_report_error $end
$var integer 32 | verbosity $end
$var integer 32 } line $end
$upscope $end

$scope function uvm_report_fatal $end
$var integer 32 ~ verbosity $end
$var integer 32 !! line $end
$upscope $end

$scope function uvm_string_to_severity $end
$var reg 1 "! uvm_string_to_severity $end
$var reg 2 #! sev [1:0] $end
$upscope $end

$scope function uvm_string_to_action $end
$upscope $end

$scope function set_config_int $end
$var reg 4096 $! value [4095:0] $end
$upscope $end

$scope function set_config_object $end
$var reg 1 %! clone $end
$upscope $end

$scope function set_config_string $end
$upscope $end

$scope function uvm_is_match $end
$var reg 1 &! uvm_is_match $end
$upscope $end

$scope function uvm_string_to_bits $end
$var reg 115200 '! uvm_string_to_bits [115199:0] $end
$upscope $end

$scope function uvm_bits_to_string $end
$var reg 115200 (! str [115199:0] $end
$upscope $end

$scope task uvm_wait_for_nba_region $end
$var integer 32 )! nba $end
$var integer 32 *! next_nba $end
$upscope $end

$scope function uvm_split_string $end
$upscope $end

$scope function uvm_hdl_concat2string $end
$upscope $end
$upscope $end

$scope begin testbench_sv_unit $end
$upscope $end

$scope begin std $end
$upscope $end

$scope begin questa_uvm_pkg $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0l
0n
0"!
b0 #!
bx '!
bx (!
bx M
bx O
bx P
bx S
bx V
1H
0^
b1110010 _
b101000110001111101010101100010 `
b1 f
0j
0p
0r
b0 t
b0 u
bx $!
0%!
0&!
b10000000000 !
b1000000000000 "
b1111000000000000000000000000 #
b10001 $
b10101010101 %
b101010101 &
b101010101 '
b0 (
b1 )
b10 *
b100 +
b1000 ,
b10000 -
b100000 .
b1000000 /
b10000000 0
b100000000 1
b1000000000 2
b10000000000000 3
b100000000000000 4
b1000000000000000 5
b10000000000000000 6
b100000000000000000 7
b100000000000000001 8
b100000000000000010 9
b100000000000000011 :
b100000000000000100 ;
b100000000000000101 <
b100000000000000110 =
b100000000000000110 >
b100000000000000111 ?
b100000000000001000 @
b100000000000001000 A
b100110000010001110110110110 B
b1 C
b1111000 D
b1111000 E
b1110111111 F
b11100000111111111 G
b0 Y
b101110 b
b0 c
b10100 d
b11111111111111111111111111111111 e
b0 m
b0 K
b0 L
b0 N
b0 R
b0 T
b0 U
b1 W
b0 X
b1101001011000001111100000011110 I
b101110 Z
b111 [
b110100010110011000011110101 \
b1101001011000001111100000011110 ]
b10011110101100000101011011000111 a
b100000 g
b10000000000000000000000000 h
b0 i
b0 k
b111110100 s
b0 v
b0 w
b11001000 x
b11011001 y
b0 z
b0 {
b0 |
b0 }
b0 ~
b0 !!
b100100 )!
b100100 *!
b11111111111111111111111111111111 J
bx Q
bx o
bx q
$end
#70
b100101 *!
b110010000 s
b100101100 s
b110010000 s
b110100010110011000011110110 a
b100101 )!
#170
b100110 *!
b100101100 s
b100110 )!
#270
b100111 *!
b111110100 s
b101000 *!
b100111 )!
b101000 )!
b101001 *!
b101010 *!
b101001 )!
b101010 )!
b10011110101100000101011011011001 a
b11001101001110100010000011011110 a
b11010101110111100010100100101010 a
b10101001101111000100101011001 a
b10101010101111011110010001011 a
b100011011111010110101011001100 a
b11000011100110010000010110000000 a
b101110001100011101000001001111 a
b1011010110101001100001101101010 a
b11100100000110010000111001100001 a
b11001001001101111001010011100 a
b10011011010110000110101001110000 a
b11100000001110011000110000110110 a
b1001111001001010111001001100110 a
b11110100111011000111101111110101 a
b100011010011101010011100001 a
b1110000110101011001001110100101 a
b11101010000010001100001100111100 a
b101010010010100110110101011110 a
b10110011110000000100000100101010 a
b111001010001110010101010 a
b1001111101111100101110110000101 a
b10110100000110101110110000101 a
b10011110001000101010000101111111 a
b10101111010011111001000011110111 a
b10100010000010011100111101111010 a
b111000011000110011100110101111 a
b11011100000111001000010000111110 a
b10011110101100000101011011101100 a
b11001101001110100010000011110001 a
b11010101110111100010100100111101 a
b10101001101111000100101101100 a
b10101010101111011110010011110 a
b100011011111010110101011011111 a
b11000011100110010000010110010011 a
b101110001100011101000001100010 a
b1011010110101001100001101111101 a
b11100100000110010000111001110100 a
b11001001001101111001010101111 a
b10011011010110000110101010000011 a
b11100000001110011000110001001001 a
b1001111001001010111001001111001 a
b11110100111011000111110000001000 a
b100011010011101010011110100 a
b1110000110101011001001110111000 a
b11101010000010001100001101001111 a
b101010010010100110110101110001 a
b10110011110000000100000100111101 a
b111001010001110010111101 a
b1001111101111100101110110011000 a
b10110100000110101110110011000 a
b10011110001000101010000110010010 a
b10101111010011111001000100001010 a
b10100010000010011100111110001101 a
b111000011000110011100111000010 a
b11011100000111001000010001010001 a
b10011110101100000101011100000000 a
b11001101001110100010000100000101 a
b11010101110111100010100101010001 a
b10101001101111000100110000000 a
b10101010101111011110010110010 a
b100011011111010110101011110011 a
b11000011100110010000010110100111 a
b101110001100011101000001110110 a
b1011010110101001100001110010001 a
b11100100000110010000111010001000 a
b11001001001101111001011000011 a
b10011011010110000110101010010111 a
b11100000001110011000110001011101 a
b1001111001001010111001010001101 a
b11110100111011000111110000011100 a
b100011010011101010100001000 a
b1110000110101011001001111001100 a
b11101010000010001100001101100011 a
b101010010010100110110110000101 a
b10110011110000000100000101010001 a
b111001010001110011010001 a
b1001111101111100101110110101100 a
b10110100000110101110110101100 a
b10011110001000101010000110100110 a
b10101111010011111001000100011110 a
b10100010000010011100111110100001 a
b111000011000110011100111010110 a
b11011100000111001000010001100101 a
b11011100000111001000010001111010 a
b111000011000110011100111101011 a
b10100010000010011100111110110110 a
b10110011110000000100000101100110 a
b11010101110111100010100101100110 a
b10011110101100000101011100010101 a
b11001101001110100010000100011010 a
b10101010101111011110011000111 a
b10101001101111000100110010101 a
b101010010010100110110110011010 a
b11100100000110010000111010011101 a
b100011011111010110101100001000 a
b11000011100110010000010110111100 a
b101110001100011101000010001011 a
b1011010110101001100001110100110 a
b11001001001101111001011011000 a
b10011011010110000110101010101100 a
b11101010000010001100001101111000 a
b11100000001110011000110001110010 a
b1001111001001010111001010100010 a
b11110100111011000111110000110001 a
b100011010011101010100011101 a
b1110000110101011001001111100001 a
b10110100000110101110111000001 a
b111001010001110011100110 a
b1001111101111100101110111000001 a
b10101111010011111001000100110011 a
b10011110001000101010000110111011 a
